# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

directive @cacheControl(maxAge: Int, scope: CacheControlScope) on OBJECT | FIELD_DEFINITION | INTERFACE

type Address {
    buildingNumber: String
    city: String
    country: String
    landmark: String
    state: String
    street: String
}
type Mutation {
    _: Boolean
    addUser(data: userInput): String!
    codeVerification(code: String!, type: String!): String!
    forgotPassword(email: String!): String!
    loginUser(email: String!, password: String!): String!
    logout: String!
    resetPassword(password: String!, token: String!): String!
    updateOne(newPassword: String!, oldPassword: String!): String!
    updatePassword(newPassword: String!, oldPassword: String!): String!
    updatePerson(data: updatePersonInput): String!
    uploadUtilityBill(image: String!): String!
    userIdentityVerification(number: Int, type: String!): String!
}

type Query {
    _: Boolean
    getCurrentUser: User!
}

type Subscription {
    _: Boolean
    newUser: User
}

type User {
    _id: ID!
    address: Address
    avater: String
    bvnVerified: Boolean
    email: String
    emailVerified: Boolean
    firstName: String
    isBlocked: Boolean
    lastName: String
    phone: String
    phoneVerified: Boolean
    utilityBill: [String]
}

enum CacheControlScope {
    PRIVATE
    PUBLIC
}

enum accountType {
    admin
    user
}

"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

"The `Upload` scalar type represents a file upload."
scalar Upload

input address {
    location: String
}

input updatePersonInput {
    address: [address]
    firstName: String!
    lastName: String!
    permissions: [String!]!
    phone: String!
}

input userInput {
    email: String!
    password: String!
    phone: String!
}
